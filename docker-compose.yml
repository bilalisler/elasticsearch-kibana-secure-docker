version: '3'
services:
  elasticsearch_docker1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch_docker1
    environment:
      - node.name=elasticsearch_docker1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch_docker2
      - cluster.initial_master_nodes=elasticsearch_docker1,elasticsearch_docker2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD

      - xpack.license.self_generated.type=trial
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=${ESCERTSDIR}/elasticsearch_docker1.key
      - xpack.security.http.ssl.certificate_authorities=${ESCERTSDIR}/rootCA.pem
      - xpack.security.http.ssl.certificate=${ESCERTSDIR}/elasticsearch_docker1.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=${ESCERTSDIR}/rootCA.pem
      - xpack.security.transport.ssl.certificate=${ESCERTSDIR}/elasticsearch_docker1.crt
      - xpack.security.transport.ssl.key=${ESCERTSDIR}/elasticsearch_docker1.key
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata1:/usr/share/elasticsearch_docker1/data
      - ${PWD}/certs/elasticsearch_docker1.crt:${ESCERTSDIR}/elasticsearch_docker1.crt
      - ${PWD}/certs/elasticsearch_docker1.key:${ESCERTSDIR}/elasticsearch_docker1.key
      - ${PWD}/certs/rootCA.pem:${ESCERTSDIR}/rootCA.pem
    ports:
      - 9200:9200
    networks:
      - elasticnetwork
    healthcheck:
      test: curl --cacert ${ESCERTSDIR}/rootCA.pem -u ${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD} -s https://elasticsearch_docker1:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  elasticsearch_docker2:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch_docker2
    environment:
      - node.name=elasticsearch_docker2
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch_docker1
      - cluster.initial_master_nodes=elasticsearch_docker1,elasticsearch_docker2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD

      - xpack.license.self_generated.type=trial
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=${ESCERTSDIR}/elasticsearch_docker2.key
      - xpack.security.http.ssl.certificate_authorities=${ESCERTSDIR}/rootCA.pem
      - xpack.security.http.ssl.certificate=${ESCERTSDIR}/elasticsearch_docker2.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=${ESCERTSDIR}/rootCA.pem
      - xpack.security.transport.ssl.certificate=${ESCERTSDIR}/elasticsearch_docker2.crt
      - xpack.security.transport.ssl.key=${ESCERTSDIR}/elasticsearch_docker2.key
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticdata2:/usr/share/elasticsearch_docker2/data
      - ${PWD}/certs/elasticsearch_docker2.crt:${ESCERTSDIR}/elasticsearch_docker2.crt
      - ${PWD}/certs/elasticsearch_docker2.key:${ESCERTSDIR}/elasticsearch_docker2.key
      - ${PWD}/certs/rootCA.pem:${ESCERTSDIR}/rootCA.pem
    networks:
      - elasticnetwork

  kibana_docker:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana_docker
    depends_on: { "elasticsearch_docker1": { "condition": "service_healthy" } }
    environment:
      ELASTICSEARCH_URL: https://elasticsearch_docker1:9200
      ELASTICSEARCH_HOSTS: '["https://elasticsearch_docker1:9200"]'
      ELASTICSEARCH_USERNAME: $ELASTIC_USERNAME
      ELASTICSEARCH_PASSWORD: $ELASTIC_PASSWORD
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: ${KIBCERTSDIR}/rootCA.pem
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: ${KIBCERTSDIR}/kibana_docker.key
      SERVER_SSL_CERTIFICATE: ${KIBCERTSDIR}/kibana_docker.crt
    volumes:
      - ${PWD}/certs/kibana_docker.crt:${KIBCERTSDIR}/kibana_docker.crt
      - ${PWD}/certs/kibana_docker.key:${KIBCERTSDIR}/kibana_docker.key
      - ${PWD}/certs/rootCA.pem:${KIBCERTSDIR}/rootCA.pem
    ports:
      - 5601:5601
    networks:
      - elasticnetwork

networks:
  elasticnetwork:
    driver: bridge

volumes:
  elasticdata1:
    driver: local
  elasticdata2:
    driver: local

